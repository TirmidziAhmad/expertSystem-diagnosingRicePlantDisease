generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  username     String   @db.VarChar
  email    String   @unique @db.VarChar
  password String   @db.VarChar
  roleId   Int
  createdAt DateTime @default(now())
  role     Role     @relation(fields: [roleId], references: [id])
  consultations Consultation[]

  @@map("users")
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique @db.VarChar
  users User[]

  @@map("roles")
}

model Disease {
  id          Int             @id @default(autoincrement())
  name        String          @unique @db.VarChar
  description String          @db.Text
  solutions   String?         @db.Text
  symptoms    DiseaseSymptom[]
  consultations Consultation[]

  @@map("diseases")
}

model Symptom {
  id          Int             @id @default(autoincrement())
  name        String          @unique @db.VarChar
  description String          @db.Text
  diseases    DiseaseSymptom[]

  @@map("symptoms")
}

model DiseaseSymptom {
  id          Int      @id @default(autoincrement())
  diseaseId   Int
  symptomId   Int
  probability Float
  disease     Disease @relation(fields: [diseaseId], references: [id])
  symptom     Symptom @relation(fields: [symptomId], references: [id])

  @@unique([diseaseId, symptomId])
  @@map("disease_symptoms")
}

model Consultation {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  userId    Int
  userInput Json
  results   Json?
  diseaseId Int?
  user      User     @relation(fields: [userId], references: [id])
  disease   Disease? @relation(fields: [diseaseId], references: [id])

  @@map("consultations")
}
